/* Do not edit this file. It was automatically genarated. */

#ifndef HEADER_TypedVector
#define HEADER_TypedVector
/*
htop
(C) 2004-2006 Hisham H. Muhammad
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/

#include "Object.h"
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

#include "debug.h"
#include <assert.h>


#ifndef DEFAULT_SIZE
#define DEFAULT_SIZE -1
#endif

typedef void(*TypedVector_procedure)(void*);

typedef struct TypedVector_ {
   Object **array;
   int arraySize;
   int growthRate;
   int items;
   char* vectorType;
   bool owner;
} TypedVector;


TypedVector* TypedVector_new(char* vectorType_, bool owner, int size);

void TypedVector_delete(TypedVector* this);

void TypedVector_prune(TypedVector* this);

void TypedVector_sort(TypedVector* this);

void TypedVector_insert(TypedVector* this, int index, void* data_);

Object* TypedVector_take(TypedVector* this, int index);

Object* TypedVector_remove(TypedVector* this, int index);

void TypedVector_moveUp(TypedVector* this, int index);

void TypedVector_moveDown(TypedVector* this, int index);

void TypedVector_set(TypedVector* this, int index, void* data_);

inline Object* TypedVector_get(TypedVector* this, int index);

inline int TypedVector_size(TypedVector* this);

void TypedVector_merge(TypedVector* this, TypedVector* v2);

void TypedVector_add(TypedVector* this, void* data_);

inline int TypedVector_indexOf(TypedVector* this, void* search_);

void TypedVector_foreach(TypedVector* this, TypedVector_procedure f);

#endif
